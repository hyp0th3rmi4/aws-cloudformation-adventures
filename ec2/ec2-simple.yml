AWSTemplateFormatVersion: 2010-09-09
Description: >
  This templates demonstrates how to build a simple EC2 instance
  and places it within a given public subnet. The template also
  allows for selecting the type of memory. Storage is instance
  based.

# Parameters help customise the behaviour of the cloud formation 
# template. In this case we use the parameters to enable the
# calling to context to specialise instance type, subnet-id,
# and other matters.
#
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:
  VpcId:
    Type: String
    Description: Unique identifier of the VPC associated to the Subnet and to the supplied security group (or the default one that will be created).
  SubnetId: 
    Type: String
    Description: Unique identifier of the subnet where the EC2 instance will be placed.
  ImageId:
    Type: String
    Description: Unique identifier of the image to create the instance with.        
  SecurityGroupId:
    Type: String
    Default: ''
    Description: Unique identifier of the security group to apply to the instance, if not specified default SSH access will be applied.
  InstanceName: 
    Type: String
    Description: Name of the instance. This will be added as a Tag whose label is Name.
  InstanceType:
    Type: String
    Default: t2.micro
    Description: Enter the type of instance you want to launch. 
  InstanceShutdownBehaviour:
    Type: String
    Default: stop
    AllowedValues:
      - stop
      - terminate
    Description: Shutdown behaviour when initiated by the instance ('stop' or 'terminate'), default is 'stop'.
  InstanceKeyPairName:
    Type: String
    Description: Name of the SSH key pair that is used to access the instance.
  InstanceTenancy:
    Type: String
    Default: default
    AllowedValues:
      - default
      - dedicated
      - host
    Description: Defines the type of hosting environment for the instance (i.e. 'host', 'default' ,'dedidated'), default value is 'default'.

# Conditions define constraints on the creation of resources, evaluation of parameters,
# or the production of output. In the current section we use it determine whether the
# name of the instance is been given otherwise a default name based on the stack is
# assigned.
#
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html
Conditions:
  HasName: !Not [!Equals [!Ref InstanceName, '']]
  DoesNotHaveSecurityGroup: !Equals [!Ref SecurityGroupId, '']


# Resources define the entities that the template is composed of that represent
# infrastructure and services that will be deployed with the stack.
# 
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Security groups are needed becasue by default EC2 instances have all port blocked
  # and no traffic will be routed to the instance. This security group provide default
  # SSH access via port 22.
  #
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  AllowAccessViaSsh:
    Type: AWS::EC2::SecurityGroup
    Condition: DoesNotHaveSecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupName: AllowAccessViaSSH
      GroupDescription: Enables SSH access on port 22.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-AccessToSSH"]]
  # The instance does defines the specification of the virtual machine to launch. Most of the hardware
  # characteristics are defined by the instance type, while the guest operating system and the stack
  # that is being associated to the VM by the image identifier. It is also important to associate a
  # security group to control access to the instance.
  #
  # https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html
  Instance:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref ImageId
      InstanceInitiatedShutdownBehavior: !Ref InstanceShutdownBehaviour
      InstanceType: !Ref InstanceType
      KeyName: !Ref InstanceKeyPairName
      SubnetId: !Ref SubnetId
      Tenancy: !Ref InstanceTenancy
      SecurityGroupIds:
      - Fn::If:
        - DoesNotHaveSecurityGroup
        # For security groups created with the default VPC the !Ref function
        # returns the security group id, but if not in the default VPC it
        # will return the name, therefore we need to specifically access the
        # group identifier.
        - !GetAtt AllowAccessViaSsh.GroupId
        - !Ref SecurityGroupId
      Tags: 
      # Conditions can only be directly applied to resources, parameters, and 
      # outputs, but they can be used as arguments of if functions and this
      # enables us to selectively set the name of the instance either to a 
      # automatically generated name based on the stack or a user provided name
      # via the parameter. We could have also simply added the automatically
      # generated name as a default value to the parameter.
        - Fn::If: 
          - HasName
          - Key: Name
            Value: !Ref InstanceName
          - Key: Name
            Value: !Join ['', [!Ref "AWS::StackName", "-Instance"]]
  
# Outputs define values exported by the template that can be used and captured
# by other templates.
#
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
Outputs:
  InstanceId: 
    Description: Unique identifier of the instance created.
    Value: !Ref Instance
  InstanceAvailabilityZone: 
    Description: Availability Zone where the instance is located.
    Value: !GetAtt Instance.AvailabilityZone
  InstancePublicIpv4: 
    Description: Public IP (v4) of the instance (if any).
    Value: !GetAtt Instance.PublicIp
  InstancePublicDns: 
    Description: Public DNS name of the instance (if any).
    Value: !GetAtt Instance.PublicDnsName
  InstancePrivateIpv4: 
    Description: Private IP (v4) of the instance.
    Value: !GetAtt Instance.PrivateIp
  InstancePrivateDns: 
    Description: Private DNS name of the instance.
    Value: !GetAtt Instance.PrivateDnsName
